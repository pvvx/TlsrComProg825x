
/* to tell the linker the program begin from __start label in cstartup.s, thus do not treat it as a unused symbol */
ENTRY(__start)

SECTIONS
{
    . = 0x0;
        .vectors :
        {
        *(.vectors)
        *(.vectors.*)	/* MUST as follows, when compile with -ffunction-sections -fdata-sections, session name may changed */
        }
        .ram_code :
        {
        *(.ram_code)
        *(.ram_code.*)
        }
        .text :
        {
        *(.text)
        *(.text.*)
        }
        .rodata :
        {
        *(.rodata)
        *(.rodata.*)
        }
    . = (((. + 3) / 4)*4);
    	PROVIDE(_ramcode_size_ = . );
    	PROVIDE(_ramcode_size_div_16_ = (. + 15 ) / 16);
    	PROVIDE(_ramcode_size_div_256_ = (. + 255) / 256);
    	PROVIDE(_ramcode_size_div_16_align_256_ = ( (. + 255) / 256) * 16);
        PROVIDE(_dstored_ = .);
        PROVIDE(_code_size_ = .);

	. = __RAM_START_ADDR + 0x900 + _ramcode_size_div_256_ * 0x100;	/* 0x100 alighned, must greater than or equal to: __RAM_START_ADDR +  irq_vector(0x100) + ram_code_size + IC_tag(0x100) + IC_cache(0x800) == 0x840a00 + ram_code_size */
        .data :
          AT ( _dstored_ )
         {
    . = (((. + 3) / 4)*4);
         PROVIDE(_start_data_ = . );
         *(.data);
         *(.data.*);
         PROVIDE(_end_data_ = . );
         }
        .bss :
        {
	. = (((. + 3) / 4)*4);
	PROVIDE(_start_bss_ = .);
        *(.sbss)
        *(.sbss.*)
        *(.bss)
        *(.bss.*)
        }
    PROVIDE(_end_bss_ = .);
	PROVIDE(_bin_size_ = _code_size_ + _end_data_ - _start_data_);
	PROVIDE(_ictag_start_ = __RAM_START_ADDR + (_ramcode_size_div_256_) * 0x100);
	PROVIDE(_ictag_end_ = __RAM_START_ADDR + (_ramcode_size_div_256_ + 1) * 0x100);
}